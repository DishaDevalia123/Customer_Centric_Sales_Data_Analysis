# -*- coding: utf-8 -*-
"""itvedant_project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sRaWst4whT2CLbpF65IZpfKdFKFkemIR
"""

import pandas as pd
import numpy as np
from scipy.stats import zscore
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('Sales Report.csv')
df

print(df.info())
print(df.describe())

#check missing values in each column
missing_values = df.isnull().sum()
print("Missing Values:")
print(missing_values)

#percentage of missing values in each column
missing_percent = (df.isnull().sum() / len(df)) * 100
print("Percent of Missing Values:")
print(missing_percent)

#remove unnecessary columns
columns_to_keep = ['Order ID', 'Order Date', 'Ship Date', 'Customer ID', 'Customer Name', 'Segment', 'City', 'Region','Category', 'Sub-Category', 'Product Name', 'Sales', 'Quantity', 'Discount', 'Profit']
df = df[columns_to_keep]
df

#checking and dropping duplicate rows
duplicate_rows = df[df.duplicated()]
print("Duplicate Rows:")
print(duplicate_rows)
df = df.drop_duplicates()
df

num_columns = df.select_dtypes(include=['float64', 'int64']).columns

plt.figure(figsize=(14, 8))
df[num_columns].boxplot(sym='r*', vert=False, patch_artist=True)
plt.title('Outlier Detection')
plt.xlabel('Values')
plt.show()

columns = ['Profit', 'Discount', 'Quantity', 'Sales']

for column in columns:
    Q1 = df[column].quantile(0.25)
    Q3 = df[column].quantile(0.75)
    IQR = Q3 - Q1
    filter = (df[column] >= Q1 - 1.5 * IQR) & (df[column] <= Q3 + 1.5 *IQR)
    print(f"Outliers for {column} are:")
    print(df.loc[~filter, column])

#z-score evaluation for outliers
z_scores = zscore(df[num_columns])
#defining a threshold as 3 for identifying outliers
threshold = 3
outliers = (abs(z_scores) > threshold).any(axis=1)
df = df[~outliers]
df

num_columns = df.select_dtypes(include=['float64', 'int64']).columns

plt.figure(figsize=(14, 8))
df[num_columns].boxplot(sym='r*', vert=False, patch_artist=True)
plt.title('Box Plot of Numeric Columns (Outlier Detection)')
plt.xlabel('Values')
plt.show()

plt.figure(figsize=(10, 6))
df.groupby('Category')['Sales'].sum().plot(kind='bar')
plt.title('Total Sales by Category')
plt.xlabel('Category')
plt.ylabel('Total Sales')
plt.show()

# Scatter plot of Sales vs. Profit
plt.figure(figsize=(10, 6))
plt.scatter(df['Sales'], df['Profit'], alpha=0.5, color='purple')
plt.title('Sales vs. Profit')
plt.xlabel('Sales')
plt.ylabel('Profit')
plt.show()

# Assuming your DataFrame is named df and you want to save it to a file named 'output_file.csv'
df.to_csv('output_file.csv', index=False)